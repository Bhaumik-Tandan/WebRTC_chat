{"version":3,"sources":["server.js","room.js","clientRoom.js","client.js","App.js","reportWebVitals.js","index.js"],"names":["sendChannel","Remote","p","className","for","name","value","this","props","con","state","c","id","type","onClick","server","cal","Component","Server","send","bind","lc","createDataChannel","onicecandidate","e","app","setState","JSON","stringify","localDescription","onmessage","messages","concat","data","length","console","log","onopen","onclose","createOffer","then","o","setLocalDescription","r","document","getElementById","setRemoteDescription","parse","a","chat","rd","onSubmit","client","Client","sid","pid","ondatachannel","receiveChannel","channel","reponse","createAnswer","localConnection","RTCPeerConnection","App","setClient","setServer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dd39abf3.chunk.js","sourcesContent":["import './App.css';\r\nimport Remote from './room';\r\nimport 'react-chatbox-component/dist/style.css';\r\nimport {ChatBox} from 'react-chatbox-component';\r\nimport React, { Component } from 'react';\r\nvar sendChannel;\r\nclass Server extends Component  {\r\n    constructor(p)\r\n    {\r\n      super(p);\r\n      this.send= this.send.bind(this);\r\n      this.cal= this.cal.bind(this);\r\n      sendChannel = this.props.lc.createDataChannel(\"sendChannel\");\r\n      this.props.lc.onicecandidate = e =>  {\r\n        this.props.app.setState({c: JSON.stringify(this.props.lc.localDescription)});\r\n        }\r\n     \r\n        sendChannel.onmessage =e =>  {\r\n          this.props.app.setState({ \r\n           messages: this.props.app.state.messages.concat([{\r\n            \"text\":e.data,\r\n            \"id\":this.props.app.state.messages.length,\r\n            \"sender\": {\r\n              \"name\": \"He\",\r\n              \"uid\": \"user2\",\r\n              \"avatar\": \"https://i.guim.co.uk/img/media/d31ebd49b32a5aa609a584ababb1e03bc70b4942/573_213_2929_1758/master/2929.jpg?width=445&quality=45&auto=format&fit=max&dpr=2&s=a54fc963e39dd6645fce012663ed13c1\",\r\n            }\r\n          }])\r\n          });\r\n          \r\n          console.log(this.props.app.state.messages);  };\r\n        sendChannel.onopen = e => console.log(\"open!!!!\");\r\n          sendChannel.onclose =e => console.log(\"closed!!!!!!\");\r\n     \r\n     \r\n          this.props.lc.createOffer().then(o => this.props.lc.setLocalDescription(o) );\r\n    }\r\n    send(e)\r\n  {\r\n    this.props.app.setState({ \r\n      messages: this.props.app.state.messages.concat([{\r\n       \"text\":e,\r\n       \"id\":this.props.app.state.messages.length,\r\n       \"sender\": {\r\n         \"name\": \"ME\",\r\n         \"uid\": \"user1\",\r\n         \"avatar\": \"https://cdn.dribbble.com/users/1041205/screenshots/3636353/dribbble.jpg\",\r\n       }\r\n     }])\r\n     });\r\n     sendChannel.send(e);\r\n  }\r\n  cal()\r\n  {\r\n    this.props.app.setState({r:document.getElementById(\"lk\").value});\r\n      this.props.lc.setRemoteDescription (JSON.parse(document.getElementById(\"lk\").value)).then(a=>this.props.app.chat());        \r\n}\r\n    render()\r\n  {\r\n    return (\r\n      <div className=\"App\">\r\n           {this.props.app.state.rd?<Remote con={this.props.app} server={this}></Remote>:\"\"}\r\n           {this.props.app.state.rd?\r\n        \"\"\r\n        :\r\n        <div className='container'>  \r\n        <div className='chat-header'>   \r\n        <h5>Chat</h5> \r\n        </div>  \r\n        <div id=\"ko\">\r\n        <ChatBox key={this.props.app.state.messages.length} onSubmit={this.send} messages={this.props.app.state.messages} />\r\n        </div>\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Server;","import React, { Component } from 'react';\r\nclass Remote extends Component  {\r\n    constructor(p)\r\n    {\r\n      super(p);\r\n    }\r\n    render()\r\n  {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>This is server</h1>\r\n          <label for=\"pid\">Your Prop</label>\r\n          <textarea name=\"pid\" value={this.props.con.state.c}/><br></br>\r\n        <label for=\"rid\">Room Id</label>\r\n        <textarea name=\"rid\" id=\"lk\"/>\r\n        <button type=\"submit\" onClick={this.props.server.cal}>Connect</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Remote;\r\n  // const remoteConnection = new RTCPeerConnection({ 'iceServers': [{ 'urls': 'stun:74.125.142.127:19302' }] })\r\n\r\n  // remoteConnection.onicecandidate = e =>  {\r\n  // console.log(\" NEW ice candidnat!! on localconnection reprinting SDP \" )\r\n  //  console.log(JSON.stringify(remoteConnection.localDescription) )\r\n  // }\r\n  \r\n   \r\n  // remoteConnection.ondatachannel= e => {\r\n  \r\n  //       const receiveChannel = e.channel;\r\n  //       receiveChannel.onmessage =e =>  console.log(\"messsage received!!!\"  + e.data )\r\n  //       receiveChannel.onopen = e => console.log(\"open!!!!\");\r\n  //       receiveChannel.onclose =e => console.log(\"closed!!!!!!\");\r\n  //       remoteConnection.channel = receiveChannel;\r\n  \r\n  // }\r\n  \r\n  \r\n  // remoteConnection.setRemoteDescription(offer).then(a=>console.log(\"done\"))\r\n  // await remoteConnection.createAnswer().then(a => remoteConnection.setLocalDescription(a));","import React, { Component } from 'react';\r\nclass Remote extends Component  {\r\n    constructor(p)\r\n    {\r\n      super(p);\r\n    }\r\n    render()\r\n  {\r\n    return (\r\n      <div className=\"App\">\r\n          <h1>This is client</h1>\r\n          <label for=\"pi\">Enter the id of the server</label>\r\n          <textarea name=\"pi\" id=\"sa\"/><br></br>\r\n        <button type=\"submit\" onClick={this.props.client.cal}>Connect</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Remote;\r\n  // const remoteConnection = new RTCPeerConnection({ 'iceServers': [{ 'urls': 'stun:74.125.142.127:19302' }] })\r\n\r\n  // remoteConnection.onicecandidate = e =>  {\r\n  // console.log(\" NEW ice candidnat!! on localconnection reprinting SDP \" )\r\n  //  console.log(JSON.stringify(remoteConnection.localDescription) )\r\n  // }\r\n  \r\n   \r\n  // remoteConnection.ondatachannel= e => {\r\n  \r\n  //       const receiveChannel = e.channel;\r\n  //       receiveChannel.onmessage =e =>  console.log(\"messsage received!!!\"  + e.data )\r\n  //       receiveChannel.onopen = e => console.log(\"open!!!!\");\r\n  //       receiveChannel.onclose =e => console.log(\"closed!!!!!!\");\r\n  //       remoteConnection.channel = receiveChannel;\r\n  \r\n  // }\r\n  \r\n  \r\n  // remoteConnection.setRemoteDescription(offer).then(a=>console.log(\"done\"))\r\n  // await remoteConnection.createAnswer().then(a => remoteConnection.setLocalDescription(a));","import './App.css';\r\nimport Remote from './clientRoom';\r\nimport 'react-chatbox-component/dist/style.css';\r\nimport {ChatBox} from 'react-chatbox-component';\r\nimport React, { Component } from 'react';\r\nclass Client extends Component  {\r\n    constructor(p)\r\n    {\r\n      super(p);\r\n      this.state = \r\n    {\r\n      sid:\"\",\r\n      pid:true\r\n    }\r\n    this.cal= this.cal.bind(this);\r\n    this.send= this.send.bind(this);\r\n    this.props.lc.onicecandidate = e =>  {\r\n        this.setState({sid: JSON.stringify(this.props.lc.localDescription)});\r\n        }\r\n\r\n        this.props.lc.ondatachannel= e => {  \r\n            const receiveChannel = e.channel;\r\n            receiveChannel.onmessage =(e) => { \r\n                this.props.app.setState({ \r\n                    messages: this.props.app.state.messages.concat([{\r\n                     \"text\":e.data,\r\n                     \"id\":this.props.app.state.messages.length,\r\n                     \"sender\": {\r\n                       \"name\": \"He\",\r\n                       \"uid\": \"user2\",\r\n                       \"avatar\": \"https://i.guim.co.uk/img/media/d31ebd49b32a5aa609a584ababb1e03bc70b4942/573_213_2929_1758/master/2929.jpg?width=445&quality=45&auto=format&fit=max&dpr=2&s=a54fc963e39dd6645fce012663ed13c1\",\r\n                     }\r\n                   }])\r\n                   });\r\n                }\r\n            receiveChannel.onopen = e => this.props.app.chat();\r\n            receiveChannel.onclose =e => console.log(\"closed!!!!!!\");\r\n            this.props.lc.channel = receiveChannel;\r\n      \r\n      }\r\n    }\r\n    send(e)\r\n    {\r\n      this.props.app.setState({ \r\n        messages: this.props.app.state.messages.concat([{\r\n         \"text\":e,\r\n         \"id\":this.props.app.state.messages.length,\r\n         \"sender\": {\r\n           \"name\": \"ME\",\r\n           \"uid\": \"user1\",\r\n           \"avatar\": \"https://cdn.dribbble.com/users/1041205/screenshots/3636353/dribbble.jpg\",\r\n         }\r\n       }])\r\n       });\r\n       this.props.lc.channel.send(e);\r\n    }\r\n    cal(e)\r\n    {\r\n        console.log(document.getElementById(\"sa\").value);\r\n        this.props.app.setState({r:document.getElementById(\"sa\").value});\r\n        this.props.lc.setRemoteDescription(JSON.parse(document.getElementById(\"sa\").value)).then(a=>console.log(\"done\"))\r\n        .then(async(reponse)=> {this.props.lc.createAnswer().then(a => this.props.lc.setLocalDescription(a))})\r\n        .then(this.setState({pid:false}));\r\n    }\r\n    render()\r\n  {\r\n    return (\r\n      <div className=\"App\">\r\n           {this.props.app.state.rd && this.state.pid?<Remote client={this}></Remote>:\"\"}\r\n           {this.props.app.state.rd && !this.state.pid?this.state.sid:\"\"}\r\n           {this.props.app.state.rd?\r\n        \"\"\r\n        :\r\n        <div className='container'>  \r\n        <div className='chat-header'>   \r\n        <h1>Chat</h1> \r\n        </div>  \r\n        <div id=\"ko\">\r\n        <ChatBox key={this.props.app.state.messages.length} onSubmit={this.send} messages={this.props.app.state.messages} />\r\n        </div>\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Client;","import './App.css';\nimport Server from './server';\nimport React, { Component } from 'react';\nimport Client from './client';\nimport 'react-chatbox-component/dist/style.css';\n// const lc=new RTCPeerConnection()\n// const dc=lc.createDataChannel(\"channel\")\n// lc.onicecandidate=e=>console.log(\"hjgjg \"+JSON.stringify(lc.localDescription))\n// lc.createOffer().then(o=>lc.setLocalDescription(o)).then(a=>console.log(\"set\"))\nconst localConnection = new RTCPeerConnection({ 'iceServers': [{ 'urls': 'stun:74.125.142.127:19302' }] });\nclass App extends Component \n{\n  constructor(p)\n  {\n    super(p);\n    this.state = \n    {\n      rd:true,\n      c:\"\",\n      r:\"\",\n      messages:[],\n      server:true,\n      client:false\n    }\n    this.chat= this.chat.bind(this);\n    this.setClient= this.setClient.bind(this);\n    this.setServer= this.setServer.bind(this);\n  }\n  chat()\n  {\n    this.setState({rd: false});\n  }\n\n  setServer()\n  {\n    this.setState({server: true,client:false});\n  }\n\n  setClient()\n  {\n    this.setState({client: true,server:false});\n  }\n\n  render()\n  {\n    return(\n      <div className=\"App\">\n       {this.state.rd?<button onClick={this.setServer}>Server</button>:\"\"}{this.state.rd?<button  onClick={this.setClient}>Client</button>:\"\"}\n        {this.state.server?<Server app={this} lc={localConnection}></Server>:\"\"}\n        {this.state.client?<Client app={this} lc={localConnection}></Client>:\"\"}\n        {/* {msg.map(item => (\n        <li key={item}>{item}</li>\n      ))} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n//https://github.com/hnasr/javascript_playground/blob/master/webrtc/peerA_final.js\n// remoteConnection.channel.send(\"sdfdas\")\n//https://www.npmjs.com/package/react-chatbox-component","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}