{"version":3,"sources":["room.js","App.js","reportWebVitals.js","index.js"],"names":["Remote","p","cal","bind","this","props","con","setState","r","document","getElementById","value","lc","setRemoteDescription","JSON","parse","then","a","chat","className","for","name","state","c","id","type","onClick","Component","localConnection","RTCPeerConnection","sendChannel","createDataChannel","App","rd","messages","send","onicecandidate","e","stringify","localDescription","onmessage","concat","data","console","log","onopen","onclose","createOffer","o","setLocalDescription","onSubmit","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mPAwBiBA,E,kDAtBb,WAAYC,GACX,IAAD,8BACE,cAAMA,IACDC,IAAK,EAAKA,IAAIC,KAAT,gBAFZ,E,uCAIA,WAAO,IAAD,OACFC,KAAKC,MAAMC,IAAIC,SAAS,CAACC,EAAEC,SAASC,eAAe,MAAMC,QACvDP,KAAKC,MAAMO,GAAGC,qBAAsBC,KAAKC,MAAMN,SAASC,eAAe,MAAMC,QAAQK,MAAK,SAAAC,GAAC,OAAE,EAAKZ,MAAMC,IAAIY,Y,oBAElH,WAEA,OACE,sBAAKC,UAAU,MAAf,UACI,uBAAOC,IAAI,MAAX,uBACA,0BAAUC,KAAK,MAAMV,MAAOP,KAAKC,MAAMC,IAAIgB,MAAMC,IAAI,uBACvD,uBAAOH,IAAI,MAAX,qBACA,0BAAUC,KAAK,MAAMG,GAAG,OACxB,wBAAQC,KAAK,SAASC,QAAStB,KAAKF,IAApC,4B,GAlBayB,a,gBCQfC,EAAkB,IAAIC,kBACtBC,EAAcF,EAAgBG,kBAAkB,eAoFvCC,E,kDAjFb,WAAY/B,GACX,IAAD,8BACE,cAAMA,IACDqB,MACL,CACEW,IAAG,EACHV,EAAE,GACFf,EAAE,GACF0B,SAAS,IAEX,EAAKhB,KAAM,EAAKA,KAAKf,KAAV,gBACX,EAAKgC,KAAM,EAAKA,KAAKhC,KAAV,gBACXyB,EAAgBQ,eAAiB,SAAAC,GAC/B,EAAK9B,SAAS,CAACgB,EAAGT,KAAKwB,UAAUV,EAAgBW,qBAGjDT,EAAYU,UAAW,SAAAH,GACrB,EAAK9B,SAAS,CACb2B,SAAU,EAAKZ,MAAMY,SAASO,OAAO,CAAC,CACrC,KAAOJ,EAAEK,KACT,GAAK,IACL,OAAU,CACR,KAAQ,KACR,IAAO,QACP,OAAU,oMAKdC,QAAQC,IAAI,EAAKtB,MAAMY,WACzBJ,EAAYe,OAAS,SAAAR,GAAC,OAAIM,QAAQC,IAAI,aACpCd,EAAYgB,QAAS,SAAAT,GAAC,OAAIM,QAAQC,IAAI,iBAG3ChB,EAAgBmB,cAAc/B,MAAK,SAAAgC,GAAC,OAAIpB,EAAgBqB,oBAAoBD,MAjC7E,E,wCAmCA,WAEE5C,KAAKG,SAAS,CAAC0B,IAAI,M,kBAErB,SAAKI,GAEHjC,KAAKG,SAAS,CACZ2B,SAAU9B,KAAKkB,MAAMY,SAASO,OAAO,CAAC,CACrC,KAAOJ,EACP,GAAK,IACL,OAAU,CACR,KAAQ,KACR,IAAO,QACP,OAAU,gFAIdP,EAAYK,KAAKE,K,oBAEpB,WAEE,OACE,sBAAKlB,UAAU,MAAf,UACGf,KAAKkB,MAAMW,GAAG,cAAC,EAAD,CAAQ3B,IAAKF,KAAMQ,GAAIgB,IAA2B,GAEhExB,KAAKkB,MAAMW,GACZ,GAEA,sBAAKd,UAAU,YAAf,UACA,qBAAKA,UAAU,cAAf,SACA,wCAEA,qBAAKK,GAAG,KAAR,SACA,cAAC,IAAD,CAA0C0B,SAAU9C,KAAK+B,KAAMD,SAAU9B,KAAKkB,MAAMY,UAAtE9B,KAAKkB,MAAMY,SAASiB,oB,GAvExBxB,aCCHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrD,SAASC,eAAe,SAE1B0C,M","file":"static/js/main.d557dc03.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Remote extends Component  {\r\n    constructor(p)\r\n    {\r\n      super(p);\r\n      this.cal= this.cal.bind(this);\r\n    }\r\n    cal() {\r\n        this.props.con.setState({r:document.getElementById(\"lk\").value});\r\n          this.props.lc.setRemoteDescription (JSON.parse(document.getElementById(\"lk\").value)).then(a=>this.props.con.chat());        \r\n    }\r\n    render()\r\n  {\r\n    return (\r\n      <div className=\"App\">\r\n          <label for=\"pid\">Your Prop</label>\r\n          <textarea name=\"pid\" value={this.props.con.state.c}/><br></br>\r\n        <label for=\"rid\">Room Id</label>\r\n        <textarea name=\"rid\" id=\"lk\"/>\r\n        <button type=\"submit\" onClick={this.cal}>Connect</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Remote;\r\n  // const remoteConnection = new RTCPeerConnection()\r\n\r\n  // remoteConnection.onicecandidate = e =>  {\r\n  // console.log(\" NEW ice candidnat!! on localconnection reprinting SDP \" )\r\n  //  console.log(JSON.stringify(remoteConnection.localDescription) )\r\n  // }\r\n  \r\n   \r\n  // remoteConnection.ondatachannel= e => {\r\n  \r\n  //       const receiveChannel = e.channel;\r\n  //       receiveChannel.onmessage =e =>  console.log(\"messsage received!!!\"  + e.data )\r\n  //       receiveChannel.onopen = e => console.log(\"open!!!!\");\r\n  //       receiveChannel.onclose =e => console.log(\"closed!!!!!!\");\r\n  //       remoteConnection.channel = receiveChannel;\r\n  \r\n  // }\r\n  \r\n  \r\n  // remoteConnection.setRemoteDescription(offer).then(a=>console.log(\"done\"))\r\n  // await remoteConnection.createAnswer().then(a => remoteConnection.setLocalDescription(a)).then(a=>\r\n  //   console.log(JSON.stringify(remoteConnection.localDescription).split(\"\\\\\").join('\\\\\\\\')))","import './App.css';\nimport Remote from './room';\nimport React, { Component } from 'react';\nimport 'react-chatbox-component/dist/style.css';\nimport {ChatBox} from 'react-chatbox-component';\n// const lc=new RTCPeerConnection()\n// const dc=lc.createDataChannel(\"channel\")\n// lc.onicecandidate=e=>console.log(\"hjgjg \"+JSON.stringify(lc.localDescription))\n// lc.createOffer().then(o=>lc.setLocalDescription(o)).then(a=>console.log(\"set\"))\nconst localConnection = new RTCPeerConnection();\nconst sendChannel = localConnection.createDataChannel(\"sendChannel\");\nclass App extends Component \n{\n  constructor(p)\n  {\n    super(p);\n    this.state = \n    {\n      rd:true,\n      c:\"\",\n      r:\"\",\n      messages:[]\n    }\n    this.chat= this.chat.bind(this);\n    this.send= this.send.bind(this);\n    localConnection.onicecandidate = e =>  {\n      this.setState({c: JSON.stringify(localConnection.localDescription)});\n      }\n   \n      sendChannel.onmessage =e =>  {\n        this.setState({ \n         messages: this.state.messages.concat([{\n          \"text\":e.data,\n          \"id\":\"1\",\n          \"sender\": {\n            \"name\": \"He\",\n            \"uid\": \"user2\",\n            \"avatar\": \"https://i.guim.co.uk/img/media/d31ebd49b32a5aa609a584ababb1e03bc70b4942/573_213_2929_1758/master/2929.jpg?width=445&quality=45&auto=format&fit=max&dpr=2&s=a54fc963e39dd6645fce012663ed13c1\",\n          }\n        }])\n        });\n        \n        console.log(this.state.messages);  };\n      sendChannel.onopen = e => console.log(\"open!!!!\");\n        sendChannel.onclose =e => console.log(\"closed!!!!!!\");\n   \n   \n   localConnection.createOffer().then(o => localConnection.setLocalDescription(o) );\n  }\n  chat()\n  {\n    this.setState({rd: false});\n  }\n  send(e)\n  {\n    this.setState({ \n      messages: this.state.messages.concat([{\n       \"text\":e,\n       \"id\":\"1\",\n       \"sender\": {\n         \"name\": \"ME\",\n         \"uid\": \"user1\",\n         \"avatar\": \"https://cdn.dribbble.com/users/1041205/screenshots/3636353/dribbble.jpg\",\n       }\n     }])\n     });\n     sendChannel.send(e);\n  }\n  render()\n  {\n    return(\n      <div className=\"App\">\n        {this.state.rd?<Remote con={this} lc={localConnection}></Remote>:\"\"}\n\n        {this.state.rd?\n        \"\"\n        :\n        <div className='container'>  \n        <div className='chat-header'>   \n        <h5>Chat</h5> \n        </div>  \n        <div id=\"ko\">\n        <ChatBox key={this.state.messages.length} onSubmit={this.send} messages={this.state.messages} />\n        </div>\n        </div>}\n\n        {/* {msg.map(item => (\n        <li key={item}>{item}</li>\n      ))} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n//https://github.com/hnasr/javascript_playground/blob/master/webrtc/peerA_final.js\n// remoteConnection.channel.send(\"sdfdas\")\n//https://www.npmjs.com/package/react-chatbox-component","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}